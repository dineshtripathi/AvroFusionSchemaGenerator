// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by avrogen, version 1.11.1
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Avro.SchemaGeneration.Sample.Model
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using global::Avro;
	using global::Avro.Specific;
	
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("avrogen", "1.11.1")]
	public partial class VirtualMachine : global::Avro.Specific.ISpecificRecord
	{
		public static global::Avro.Schema _SCHEMA = global::Avro.Schema.Parse(@"{""type"":""record"",""name"":""VirtualMachine"",""namespace"":""Avro.SchemaGeneration.Sample.Model"",""fields"":[{""name"":""VirtualMachineName"",""type"":""string""},{""name"":""Size"",""type"":""string""},{""name"":""OperatingSystem"",""type"":""string""},{""name"":""Status"",""type"":{""type"":""enum"",""name"":""VirtualMachineStatus"",""namespace"":""Avro.SchemaGeneration.Sample.Model"",""symbols"":[""Running"",""Stopped"",""Deallocated"",""Deleting""]}}]}");
		private string _VirtualMachineName;
		private string _Size;
		private string _OperatingSystem;
		private Avro.SchemaGeneration.Sample.Model.VirtualMachineStatus _Status;
		public virtual global::Avro.Schema Schema
		{
			get
			{
				return VirtualMachine._SCHEMA;
			}
		}
		public string VirtualMachineName
		{
			get
			{
				return this._VirtualMachineName;
			}
			set
			{
				this._VirtualMachineName = value;
			}
		}
		public string Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				this._Size = value;
			}
		}
		public string OperatingSystem
		{
			get
			{
				return this._OperatingSystem;
			}
			set
			{
				this._OperatingSystem = value;
			}
		}
		public Avro.SchemaGeneration.Sample.Model.VirtualMachineStatus Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				this._Status = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this.VirtualMachineName;
			case 1: return this.Size;
			case 2: return this.OperatingSystem;
			case 3: return this.Status;
			default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this.VirtualMachineName = (System.String)fieldValue; break;
			case 1: this.Size = (System.String)fieldValue; break;
			case 2: this.OperatingSystem = (System.String)fieldValue; break;
			case 3: this.Status = (Avro.SchemaGeneration.Sample.Model.VirtualMachineStatus)fieldValue; break;
			default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}
