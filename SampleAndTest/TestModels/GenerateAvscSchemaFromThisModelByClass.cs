// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by avrogen, version 1.11.1
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace TestModels
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using global::Avro;
	using global::Avro.Specific;
	
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("avrogen", "1.11.1")]
	public partial class GenerateAvscSchemaFromThisModelByClass : global::Avro.Specific.ISpecificRecord
	{
		public static global::Avro.Schema _SCHEMA = global::Avro.Schema.Parse(@"{""type"":""record"",""name"":""GenerateAvscSchemaFromThisModelByClass"",""namespace"":""TestModels"",""fields"":[{""name"":""Name"",""type"":""string""},{""name"":""Description"",""type"":""string""},{""name"":""Type"",""type"":""string""},{""name"":""TypeDescription"",""type"":""string""},{""name"":""GenerateDateTime"",""type"":""long""},{""name"":""ValueClass"",""type"":{""type"":""record"",""name"":""ValueClass"",""namespace"":""TestModels"",""fields"":[{""name"":""Value"",""type"":""string""},{""name"":""ValueString"",""type"":""string""},{""name"":""ValueInt"",""type"":""int""},{""name"":""ValueDouble"",""type"":""double""},{""name"":""ValueFloat"",""type"":""float""},{""name"":""ValueDateTime"",""type"":""long""},{""name"":""ValueDecimal"",""type"":""bytes""}]}},{""name"":""DictionaryModel"",""type"":{""type"":""record"",""name"":""DictionaryModel"",""namespace"":""TestModels"",""fields"":[{""name"":""DictionaryKeyString"",""type"":{""type"":""map"",""values"":""string""}},{""name"":""DictionaryStringValueClasses"",""type"":{""type"":""map"",""values"":""ValueClass""}},{""name"":""NumericValue"",""type"":[""int"",""double"",""null""]}]}},{""name"":""ListModel"",""type"":{""type"":""record"",""name"":""ListModel"",""namespace"":""TestModels"",""fields"":[{""name"":""ListKeyString"",""type"":{""type"":""array"",""items"":""string""}},{""name"":""ListKeyInt"",""type"":{""type"":""array"",""items"":""int""}}]}},{""name"":""DictionaryValueClasses"",""type"":{""type"":""map"",""values"":""ValueClass""}},{""name"":""enumValueType"",""type"":{""type"":""enum"",""name"":""ValueType"",""namespace"":""TestModels"",""symbols"":[""single"",""collection"",""list"",""tupple"",""primitive""]}},{""name"":""FloatDecimalValue"",""type"":[""float"",""bytes"",""null""]}]}");
		private string _Name;
		private string _Description;
		private string _Type;
		private string _TypeDescription;
		private long _GenerateDateTime;
		private TestModels.ValueClass _ValueClass;
		private TestModels.DictionaryModel _DictionaryModel;
		private TestModels.ListModel _ListModel;
		private IDictionary<string,TestModels.ValueClass> _DictionaryValueClasses;
		private TestModels.ValueType _enumValueType;
		private object _FloatDecimalValue;
		public virtual global::Avro.Schema Schema
		{
			get
			{
				return GenerateAvscSchemaFromThisModelByClass._SCHEMA;
			}
		}
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				this._Name = value;
			}
		}
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				this._Description = value;
			}
		}
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				this._Type = value;
			}
		}
		public string TypeDescription
		{
			get
			{
				return this._TypeDescription;
			}
			set
			{
				this._TypeDescription = value;
			}
		}
		public long GenerateDateTime
		{
			get
			{
				return this._GenerateDateTime;
			}
			set
			{
				this._GenerateDateTime = value;
			}
		}
		public TestModels.ValueClass ValueClass
		{
			get
			{
				return this._ValueClass;
			}
			set
			{
				this._ValueClass = value;
			}
		}
		public TestModels.DictionaryModel DictionaryModel
		{
			get
			{
				return this._DictionaryModel;
			}
			set
			{
				this._DictionaryModel = value;
			}
		}
		public TestModels.ListModel ListModel
		{
			get
			{
				return this._ListModel;
			}
			set
			{
				this._ListModel = value;
			}
		}
		public IDictionary<string,TestModels.ValueClass> DictionaryValueClasses
		{
			get
			{
				return this._DictionaryValueClasses;
			}
			set
			{
				this._DictionaryValueClasses = value;
			}
		}
		public TestModels.ValueType enumValueType
		{
			get
			{
				return this._enumValueType;
			}
			set
			{
				this._enumValueType = value;
			}
		}
		public object FloatDecimalValue
		{
			get
			{
				return this._FloatDecimalValue;
			}
			set
			{
				this._FloatDecimalValue = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this.Name;
			case 1: return this.Description;
			case 2: return this.Type;
			case 3: return this.TypeDescription;
			case 4: return this.GenerateDateTime;
			case 5: return this.ValueClass;
			case 6: return this.DictionaryModel;
			case 7: return this.ListModel;
			case 8: return this.DictionaryValueClasses;
			case 9: return this.enumValueType;
			case 10: return this.FloatDecimalValue;
			default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this.Name = (System.String)fieldValue; break;
			case 1: this.Description = (System.String)fieldValue; break;
			case 2: this.Type = (System.String)fieldValue; break;
			case 3: this.TypeDescription = (System.String)fieldValue; break;
			case 4: this.GenerateDateTime = (System.Int64)fieldValue; break;
			case 5: this.ValueClass = (TestModels.ValueClass)fieldValue; break;
			case 6: this.DictionaryModel = (TestModels.DictionaryModel)fieldValue; break;
			case 7: this.ListModel = (TestModels.ListModel)fieldValue; break;
			case 8: this.DictionaryValueClasses = (IDictionary<string,TestModels.ValueClass>)fieldValue; break;
			case 9: this.enumValueType = (TestModels.ValueType)fieldValue; break;
			case 10: this.FloatDecimalValue = (System.Object)fieldValue; break;
			default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}
