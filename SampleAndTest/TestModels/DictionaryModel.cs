// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by avrogen, version 1.11.1
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace TestModels
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using global::Avro;
	using global::Avro.Specific;
	
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("avrogen", "1.11.1")]
	public partial class DictionaryModel : global::Avro.Specific.ISpecificRecord
	{
		public static global::Avro.Schema _SCHEMA = global::Avro.Schema.Parse(@"{""type"":""record"",""name"":""DictionaryModel"",""namespace"":""TestModels"",""fields"":[{""name"":""DictionaryKeyString"",""type"":{""type"":""map"",""values"":""string""}},{""name"":""DictionaryStringValueClasses"",""type"":{""type"":""map"",""values"":{""type"":""record"",""name"":""ValueClass"",""namespace"":""TestModels"",""fields"":[{""name"":""Value"",""type"":""string""},{""name"":""ValueString"",""type"":""string""},{""name"":""ValueInt"",""type"":""int""},{""name"":""ValueDouble"",""type"":""double""},{""name"":""ValueFloat"",""type"":""float""},{""name"":""ValueDateTime"",""type"":""long""},{""name"":""ValueDecimal"",""type"":""bytes""}]}}},{""name"":""NumericValue"",""type"":[""int"",""double"",""null""]}]}");
		private IDictionary<string,System.String> _DictionaryKeyString;
		private IDictionary<string,TestModels.ValueClass> _DictionaryStringValueClasses;
		private object _NumericValue;
		public virtual global::Avro.Schema Schema
		{
			get
			{
				return DictionaryModel._SCHEMA;
			}
		}
		public IDictionary<string,System.String> DictionaryKeyString
		{
			get
			{
				return this._DictionaryKeyString;
			}
			set
			{
				this._DictionaryKeyString = value;
			}
		}
		public IDictionary<string,TestModels.ValueClass> DictionaryStringValueClasses
		{
			get
			{
				return this._DictionaryStringValueClasses;
			}
			set
			{
				this._DictionaryStringValueClasses = value;
			}
		}
		public object NumericValue
		{
			get
			{
				return this._NumericValue;
			}
			set
			{
				this._NumericValue = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this.DictionaryKeyString;
			case 1: return this.DictionaryStringValueClasses;
			case 2: return this.NumericValue;
			default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this.DictionaryKeyString = (IDictionary<string,System.String>)fieldValue; break;
			case 1: this.DictionaryStringValueClasses = (IDictionary<string,TestModels.ValueClass>)fieldValue; break;
			case 2: this.NumericValue = (System.Object)fieldValue; break;
			default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}
